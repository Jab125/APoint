import proguard.gradle.ProGuardTask

buildscript {
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.2.0'
    }
}

plugins {
    id 'java'
    id 'maven-publish'
}

group 'com.jab125.apoint'
archivesBaseName = "non-obf-apoint"

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

def proguardJarOut = file(jar.archiveFile.get().getAsFile().absolutePath.replace("non-obf-", "obf/"))

task proguardJar(type: ProGuardTask, dependsOn: jar) {
    configuration './proguard-rules.pro'
    verbose
    injars jar.archiveFile.get().getAsFile()
    outjars proguardJarOut
    libraryjars files(configurations.compileClasspath)
    printmapping 'out.map'
}

build.dependsOn proguardJar

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}